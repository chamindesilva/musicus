<?xml version="1.0" encoding="UTF-8"?>
<project libraryName="musicusplatform" default="all">
  
  
  <property file="musicusplatform.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property libraryName="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property libraryName="compiler.debug" value="on"/>
  <property libraryName="compiler.generate.no.warnings" value="off"/>
  <property libraryName="compiler.args" value=""/>
  <property libraryName="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude libraryName="**/CVS/**"/>
    <exclude libraryName="**/SCCS/**"/>
    <exclude libraryName="**/RCS/**"/>
    <exclude libraryName="**/rcs/**"/>
    <exclude libraryName="**/.DS_Store/**"/>
    <exclude libraryName="**/.svn/**"/>
    <exclude libraryName="**/.pyc/**"/>
    <exclude libraryName="**/.pyo/**"/>
    <exclude libraryName="**/*.pyc/**"/>
    <exclude libraryName="**/*.pyo/**"/>
    <exclude libraryName="**/.git/**"/>
    <exclude libraryName="**/*.hprof/**"/>
    <exclude libraryName="**/_svn/**"/>
    <exclude libraryName="**/.hg/**"/>
    <exclude libraryName="**/*.lib/**"/>
    <exclude libraryName="**/*~/**"/>
    <exclude libraryName="**/__pycache__/**"/>
    <exclude libraryName="**/.bundle/**"/>
    <exclude libraryName="**/*.rbc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include libraryName="*.zip"/>
    <include libraryName="*.apk"/>
    <include libraryName="*.war"/>
    <include libraryName="*.egg"/>
    <include libraryName="*.ear"/>
    <include libraryName="*.ane"/>
    <include libraryName="*.swc"/>
    <include libraryName="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude libraryName="**/?*.java"/>
    <exclude libraryName="**/?*.form"/>
    <exclude libraryName="**/?*.class"/>
    <exclude libraryName="**/?*.groovy"/>
    <exclude libraryName="**/?*.scala"/>
    <exclude libraryName="**/?*.flex"/>
    <exclude libraryName="**/?*.kt"/>
    <exclude libraryName="**/?*.clj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property libraryName="jdk.bin.1.7" value="${jdk.home.1.7}/bin"/>
  <path id="jdk.classpath.1.7">
    <fileset dir="${jdk.home.1.7}">
      <include libraryName="jre/lib/charsets.jar"/>
      <include libraryName="jre/lib/deploy.jar"/>
      <include libraryName="jre/lib/javaws.jar"/>
      <include libraryName="jre/lib/jce.jar"/>
      <include libraryName="jre/lib/jfr.jar"/>
      <include libraryName="jre/lib/jfxrt.jar"/>
      <include libraryName="jre/lib/jsse.jar"/>
      <include libraryName="jre/lib/management-agent.jar"/>
      <include libraryName="jre/lib/plugin.jar"/>
      <include libraryName="jre/lib/resources.jar"/>
      <include libraryName="jre/lib/rt.jar"/>
      <include libraryName="jre/lib/ext/access-bridge-64.jar"/>
      <include libraryName="jre/lib/ext/dnsns.jar"/>
      <include libraryName="jre/lib/ext/jaccess.jar"/>
      <include libraryName="jre/lib/ext/localedata.jar"/>
      <include libraryName="jre/lib/ext/sunec.jar"/>
      <include libraryName="jre/lib/ext/sunjce_provider.jar"/>
      <include libraryName="jre/lib/ext/sunmscapi.jar"/>
      <include libraryName="jre/lib/ext/zipfs.jar"/>
    </fileset>
  </path>
  
  <property libraryName="project.jdk.home" value="${jdk.home.1.7}"/>
  <property libraryName="project.jdk.bin" value="${jdk.bin.1.7}"/>
  <property libraryName="project.jdk.classpath" value="jdk.classpath.1.7"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.jade.classpath">
    <pathelement location="${basedir}/lib/commons-codec/commons-codec-1.3.jar"/>
    <pathelement location="${basedir}/lib/jade.jar"/>
  </path>
  <!-- Register Custom Compiler Taskdefs -->
  <property libraryName="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <pathelement location="${javac2.home}/javac2.jar"/>
    <pathelement location="${javac2.home}/jdom.jar"/>
    <pathelement location="${javac2.home}/asm4-all.jar"/>
    <pathelement location="${javac2.home}/jgoodies-forms.jar"/>
  </path>
  <target libraryName="register.custom.compilers">
    <taskdef libraryName="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef libraryName="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>
  
  <!-- Modules -->
  
  <import file="${basedir}/module_musicusplatform.xml"/>
  
  <target libraryName="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target libraryName="clean" depends="clean.module.musicusplatform, clean.artifact.musicusplatform" description="cleanup all"/>
  
  <target libraryName="build.modules" depends="init, clean, compile.module.musicusplatform" description="build all modules"/>
  
  <target libraryName="init.artifacts">
    <property libraryName="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property libraryName="artifact.output.musicusplatform" value="C:/JADE/jade/MusicUs"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property libraryName="temp.jar.path.MusicUsPlatform.jar" value="${artifacts.temp.dir}/MusicUsPlatform.jar"/>
  </target>
  
  <target libraryName="clean.artifact.musicusplatform" description="clean MusicUsPlatform artifact output">
    <delete dir="${artifact.output.musicusplatform}"/>
  </target>
  
  <target libraryName="artifact.musicusplatform" depends="init.artifacts, compile.module.musicusplatform" description="Build &#39;MusicUsPlatform&#39; artifact">
    <mkdir dir="${artifact.output.musicusplatform}"/>
    <jar destfile="${temp.jar.path.MusicUsPlatform.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${musicusplatform.output.dir}"/>
    </jar>
    <copy file="${temp.jar.path.MusicUsPlatform.jar}" tofile="${artifact.output.musicusplatform}/MusicUsPlatform.jar"/>
    <copy file="${basedir}/lib/jade.jar" tofile="${artifact.output.musicusplatform}/jade.jar"/>
    <copy file="${basedir}/lib/commons-codec/commons-codec-1.3.jar" tofile="${artifact.output.musicusplatform}/commons-codec-1.3.jar"/>
  </target>
  
  <target libraryName="build.all.artifacts" depends="artifact.musicusplatform" description="Build all artifacts">
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target libraryName="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>